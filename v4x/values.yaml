# Default values for v4x.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

env:
  # 从 values.yaml 直接设置的环境变量
  variables:
    - name: docker
      value: "true"
    - name: INSTALLED
      value: "true"
    
    # 通过环境变量设置 Redis DB
    - name: REDIS_DB
      value: "2"
    - name: REDIS_CACHE_DB
      value: "2"

  # 从 Secret 中读取的环境变量, 原是用来设置数据库连接的，现在都在 .env 文件中了
  secrets: {}
    # - name: DATABASE_URL
    #   secretName: v4x
    #   secretKey: db-url
    # - name: REDIS_URL
    #   secretName: v4x
    #   secretKey: redis-url

replicaCount: 1

image:
  repository: ghcr.io/cedar2025/xboard
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

# Pod 全局上下文配置，优先级低于下方的容器 securityContext
podSecurityContext: {}
  # fsGroup: 2000

# 容器级别的安全上下文配置，目前只有一个容器，所以这里直接设置
securityContext:
  runAsUser: 0         # 将进程运行在 root 下
  runAsGroup: 1000        # 设置用户组 ID
  fsGroup: 1000           # 设置挂载文件的组权限

service:
  type: ClusterIP
  port: 7001

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 400m
    memory: 500Mi

livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 30      # 增加启动后的初次探测延迟
  periodSeconds: 10            # 每次探测之间的间隔
  timeoutSeconds: 5            # 每次探测的超时时间
  failureThreshold: 5          # 探测失败次数上限

readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 15       # 增加启动后的初次探测延迟
  periodSeconds: 10             # 每次探测之间的间隔
  timeoutSeconds: 5             # 每次探测的超时时间
  failureThreshold: 3           # 探测失败次数上限

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
- name: env-file
  secret:
    secretName: v4x
    defaultMode: 0755

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
- name: env-file
  mountPath: /www/.env  # 应用程序中的挂载路径
  subPath: .env          # 这里指定 Secret 数据项名

nodeSelector: {}

tolerations: []

affinity: {}
